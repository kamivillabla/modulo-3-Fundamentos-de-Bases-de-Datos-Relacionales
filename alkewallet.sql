CREATE DATABASE `ALKEWALLET`;
USE `ALKEWALLET` ;

-- -----------------------------------------------------
-- Table `alke_wallet2`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `USUARIOS` (
  `USU_ID` INT NOT NULL,
  `USU_NAME` VARCHAR(45) NOT NULL,
  `USU_EMAIL` VARCHAR(45) NOT NULL,
  `USU_PASSWORD` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`USU_ID`),
  UNIQUE INDEX `USU_ID_UNIQUE` (`USU_ID` ASC) VISIBLE,
  UNIQUE INDEX `USU_EMAIL_UNIQUE` (`USU_EMAIL` ASC) VISIBLE
  );

-- -----------------------------------------------------
-- Table `alke_wallet2`.`monedas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MONEDAS` (
  `CURR_ID` INT NOT NULL,
  `CURR_NAME` VARCHAR(45) NOT NULL,
  `CURR_SYMBOL` VARCHAR(45) NOT NULL,
  `CURR_VALOR` FLOAT NULL,
  PRIMARY KEY (`CURR_ID`),
  UNIQUE INDEX `CURR_ID` (`CURR_ID` ASC) VISIBLE,
  UNIQUE INDEX `CURR_NAME` (`CURR_NAME` ASC) VISIBLE,
  UNIQUE INDEX `CURR_SYMBOL` (`CURR_SYMBOL` ASC) VISIBLE
  );

-- -----------------------------------------------------
-- Table `alke_wallet2`.`Bancos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BANCOS` (
  `BAN_ID` INT NOT NULL,
  `BAN_NOMBRE` VARCHAR(45) NULL,
  PRIMARY KEY (`BAN_ID`),
  UNIQUE INDEX `BAN_ID_UNIQUE` (`BAN_ID` ASC) VISIBLE
  );

-- -----------------------------------------------------
-- Table `alke_wallet2`.`Transacciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TRANSACCIONES` (
  `TRAN_ID` INT NOT NULL,
  `SENDER_CUENTA` INT NOT NULL, 
  `RECEIVER_CUENTA` INT NOT NULL, 
  `TRAN_IMPORTE` INT NOT NULL,
  `TRAN_FECHA` DATE NULL,
  `TRAN_TIPO` VARCHAR(45) NULL,
  PRIMARY KEY (`TRAN_ID`)
  
);

-- -----------------------------------------------------
-- Table `alke_wallet2`.`cuentas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CUENTAS` (
  `CUENTA_ID` INT NOT NULL AUTO_INCREMENT,
  `USU_ID` INT NOT NULL,
  `CUENTA_SALDO` DECIMAL(10,0) NOT NULL,
  `CURR_ID` INT NOT NULL,
  `CUENTA_TIPO` VARCHAR(45) NOT NULL,
  `BAN_ID` INT NULL,
  `TRAN_ID` INT,
  PRIMARY KEY (`CUENTA_ID`),
  UNIQUE INDEX `CUENTA_ID` (`CUENTA_ID` ASC) VISIBLE,
  INDEX `CURR_ID` (`CURR_ID` ASC) VISIBLE, 
  INDEX `USU_ID` (`USU_ID` ASC) VISIBLE,
  INDEX `BAN_ID_idx` (`BAN_ID` ASC) VISIBLE,
  INDEX `TRAN_ID_IDX` (`TRAN_ID` ASC) VISIBLE,
  
  CONSTRAINT `cuentas_ibfk_1`
    FOREIGN KEY (`USU_ID`)
    REFERENCES `USUARIOS` (`USU_ID`),
  
  CONSTRAINT `cuentas_ibfk_2`
    FOREIGN KEY (`CURR_ID`)
    REFERENCES `MONEDAS` (`CURR_ID`),
  
  CONSTRAINT `BAN_ID`
    FOREIGN KEY (`BAN_ID`)
    REFERENCES `BANCOS` (`BAN_ID`),
    
    CONSTRAINT `TRAN_ID`
    FOREIGN KEY (`TRAN_ID`)
    REFERENCES `TRANSACCIONES` (`TRAN_ID`)
    
    );

-- -----------------------------------------------------
-- Table `alke_wallet2`.`Contactos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CONTACTOS` (
  `CONT_ID` INT NOT NULL AUTO_INCREMENT,
  `CONT_NOMBRE` VARCHAR(45) NULL,
  `CONT_RUT` VARCHAR(10) NOT NULL,
  `CONT_N_CUENTA` INT NULL,
  `USU_ID` INT NULL,
  PRIMARY KEY (`CONT_ID`),
  INDEX `USU_ID_idx` (`USU_ID` ASC) VISIBLE,
  CONSTRAINT `USU_ID`
    FOREIGN KEY (`USU_ID`)
    REFERENCES `usuarios` (`USU_ID`)
    );


INSERT USUARIOS (USU_ID, USU_NAME, USU_EMAIL, USU_PASSWORD) VALUES (1,"APACHAI HOPACHAI","APACHAI@GMAIL.COM","1234");
INSERT USUARIOS (USU_ID, USU_NAME, USU_EMAIL, USU_PASSWORD) VALUES (2,"KENICHI SHIRAHAMA","KENICHI@GMAIL.COM","1234");
INSERT USUARIOS (USU_ID, USU_NAME, USU_EMAIL, USU_PASSWORD) VALUES (3,"MIU FURINJI","MIU@GMAIL.COM","1234");

INSERT MONEDAS (CURR_ID, CURR_NAME, CURR_SYMBOL, CURR_VALOR) VALUES (1,"DOLLAR","US$",1000.2);
INSERT MONEDAS (CURR_ID, CURR_NAME, CURR_SYMBOL, CURR_VALOR) VALUES (2,"PESOS","CL",100000);
INSERT MONEDAS (CURR_ID, CURR_NAME, CURR_SYMBOL, CURR_VALOR) VALUES (3,"EURO","€",200.3);

INSERT BANCOS (BAN_ID, BAN_NOMBRE) VALUES (1,"BANCO ESTADO");
INSERT BANCOS (BAN_ID, BAN_NOMBRE) VALUES (2,"BANCO SCOTIABANK");
INSERT BANCOS (BAN_ID, BAN_NOMBRE) VALUES (3,"BCI");
INSERT BANCOS (BAN_ID, BAN_NOMBRE) VALUES (4,"BANCO DE CHILE");
INSERT BANCOS (BAN_ID, BAN_NOMBRE) VALUES (5,"SANTANDER");

INSERT CONTACTOS (CONT_NOMBRE,CONT_RUT,CONT_N_CUENTA,USU_ID) VALUES ("GUILLE MCDONALD","12333234-2",998888,1);
INSERT CONTACTOS (CONT_NOMBRE,CONT_RUT,CONT_N_CUENTA,USU_ID) VALUES ("HONDA SHAO","14333234-2",998454,1);
INSERT CONTACTOS (CONT_NOMBRE,CONT_RUT,CONT_N_CUENTA,USU_ID) VALUES ("KEN","20333234-2",996543,1);
INSERT CONTACTOS (CONT_NOMBRE,CONT_RUT,CONT_N_CUENTA,USU_ID) VALUES ("RYO CHAN","21333234-2",444444,2);
INSERT CONTACTOS (CONT_NOMBRE,CONT_RUT,CONT_N_CUENTA,USU_ID) VALUES ("BLANCA BOSE","23433234-2",555555,2);
INSERT CONTACTOS (CONT_NOMBRE,CONT_RUT,CONT_N_CUENTA,USU_ID) VALUES ("MAJIN BOO","11333234-2",777777,3);
INSERT CONTACTOS (CONT_NOMBRE,CONT_RUT,CONT_N_CUENTA,USU_ID) VALUES ("VEGETA","9333234-2",765555,3);
INSERT CONTACTOS (CONT_NOMBRE,CONT_RUT,CONT_N_CUENTA,USU_ID) VALUES ("ZANGUIEF","25333234-2",743467,3);
INSERT CONTACTOS (CONT_NOMBRE,CONT_RUT,CONT_N_CUENTA,USU_ID) VALUES ("CHUN LI","24333234-2",754433,3);



INSERT TRANSACCIONES (TRAN_ID, SENDER_CUENTA, RECEIVER_CUENTA, TRAN_IMPORTE, TRAN_FECHA, TRAN_TIPO) VALUES (1,'2', '1', '30', '2023-12-05', 'PAGO');
INSERT TRANSACCIONES (TRAN_ID, SENDER_CUENTA, RECEIVER_CUENTA, TRAN_IMPORTE, TRAN_FECHA, TRAN_TIPO) VALUES (2,'1', '3', '305', '2023-12-21', 'PAGO');
INSERT TRANSACCIONES (TRAN_ID, SENDER_CUENTA, RECEIVER_CUENTA, TRAN_IMPORTE, TRAN_FECHA, TRAN_TIPO) VALUES (3,'3', '2', '65', '2023-10-21', 'RECIBO');
INSERT TRANSACCIONES (TRAN_ID, SENDER_CUENTA, RECEIVER_CUENTA, TRAN_IMPORTE, TRAN_FECHA, TRAN_TIPO) VALUES (4,'2', '1', '65', '2023-10-21', 'RECIBO');


INSERT CUENTAS (USU_ID,CUENTA_SALDO,CURR_ID,CUENTA_TIPO,BAN_ID,TRAN_ID) VALUES (1,100000,2,"DEBITO",1,1);
INSERT CUENTAS (USU_ID,CUENTA_SALDO,CURR_ID,CUENTA_TIPO,BAN_ID,TRAN_ID) VALUES (1,100000,2,"CREDITO",2,1);
INSERT CUENTAS (USU_ID,CUENTA_SALDO,CURR_ID,CUENTA_TIPO,BAN_ID,TRAN_ID) VALUES (2,100000,1,"DEBITO",1,1);
INSERT CUENTAS (USU_ID,CUENTA_SALDO,CURR_ID,CUENTA_TIPO,BAN_ID,TRAN_ID) VALUES (2,100000,3,"CREDITO",2,1);


-- Consulta para obtener el nombre de la moneda elegida por un usuario específicO
 
SELECT MONEDAS.CURR_NAME
FROM CUENTAS
JOIN MONEDAS ON CUENTAS.CURR_ID = MONEDAS.CURR_ID
WHERE CUENTAS.USU_ID = 2;

-- Obtener todas las transacciones registradas
SELECT * from transacciones;

-- Consulta para obtener todas las transacciones realizadas por un usuario en específico
SELECT *
FROM Transacciones
WHERE SENDER_CUENTA = 1 OR RECEIVER_CUENTA = 1;

-- Sentencia DML para modificar el campo correo electrónico de un usuario específico
SELECT * from Usuarios;

UPDATE Usuarios
SET USU_EMAIL = "correoprueba@correo.com"
WHERE USU_ID = 2;

-- Sentencia para eliminar los datos de una transacción (eliminado de la fila completa)
DELETE FROM TRANSACCIONES
WHERE TRAN_ID = 4;

